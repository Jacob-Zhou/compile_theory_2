production = "program -> block";
production = "block -> { stmts }";
production = "stmts -> stmt stmts";
production = "stmts -> NULL";
production = "stmt -> ID = expr;";
production = "stmt -> IF ( bool ) stmt stmt1";
production = "stmt -> WHILE ( bool ) stmt";
production = "stmt -> DO stmt WHILE ( bool )";
production = "stmt -> BREAK";
production = "stmt -> block";
production = "stmt1 -> ELSE stmt";
production = "stmt1 -> NULL";
production = "bool -> expr bool1";
production = "bool1 -> < bool2";
production = "bool1 -> > bool2";
production = "bool1 -> NULL";
production = "bool2 -> expr";
production = "bool2 -> = expr";
production = "expr -> term expr1";
production = "expr1 -> + term expr1";
production = "expr1 -> - term expr1";
production = "expr1 -> NULL";
production = "term -> factor term1";
production = "term1 -> * factor term1";
production = "term1 -> / factor term1";
production = "term1 -> NULL";
production = "factor -> ( expr )";
production = "factor -> ID";
production = "factor -> NUM";